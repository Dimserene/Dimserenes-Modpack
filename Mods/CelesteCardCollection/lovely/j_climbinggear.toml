[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# injecting climbing gear into draw_from_play_to_discard func
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "draw_card(G.play,G.discard, it*100/play_count,'down', false, v)"
position = "before"
payload = '''
if next(find_joker('ccc_Climbing Gear')) then
	draw_card(G.play,G.deck, it*100/play_count,'down', false, v)
	G.deck:shuffle('nr'..G.GAME.round_resets.ante)
else
'''
match_indent = true

# i don't wanna touch the poor code :(
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "draw_card(G.play,G.discard, it*100/play_count,'down', false, v)"
position = "after"
payload = '''
end
'''
match_indent = true

# now we gotta inject in discard_cards_from_highlighted
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "draw_card(G.hand, G.discard, i*100/highlighted_count, 'down', false, G.hand.highlighted[i])"
position = "before"
payload = '''
if next(find_joker('ccc_Climbing Gear')) then
	draw_card(G.hand, G.deck, i*100/highlighted_count, 'down', false, G.hand.highlighted[i])
	G.deck:shuffle('nr'..G.GAME.round_resets.ante)
else
'''
match_indent = true

# same as usual
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "draw_card(G.hand, G.discard, i*100/highlighted_count, 'down', false, G.hand.highlighted[i])"
position = "after"
payload = '''
end
'''
match_indent = true